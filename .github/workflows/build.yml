name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build'
        required: true
        default: '1.6.0'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: win
          - os: macos-latest
            platform: mac-intel
          - os: macos-latest
            platform: mac-arm

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for Windows
        if: matrix.platform == 'win'
        run: npm run make-win
        env:
          # Provide GitHub token for publishing
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build for macOS Intel
        if: matrix.platform == 'mac-intel'
        run: npm run make-mac
        env:
          # Disable code signing for now
          CSC_IDENTITY_AUTO_DISCOVERY: false
          # Provide GitHub token for publishing
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build for macOS Apple Silicon
        if: matrix.platform == 'mac-arm'
        run: npm run make-mac-arm
        env:
          # Disable code signing for now
          CSC_IDENTITY_AUTO_DISCOVERY: false
          # Provide GitHub token for publishing
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows artifacts
        if: matrix.platform == 'win'
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            out/make/squirrel.windows/**/*.exe
            out/make/zip/**/*.zip

      - name: Upload macOS Intel artifacts
        if: matrix.platform == 'mac-intel'
        uses: actions/upload-artifact@v4
        with:
          name: macos-intel-build
          path: |
            dist/*.dmg
            dist/*.zip

      - name: Upload macOS Apple Silicon artifacts
        if: matrix.platform == 'mac-arm'
        uses: actions/upload-artifact@v4
        with:
          name: macos-arm-build
          path: |
            dist/*.dmg
            dist/*.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: ./dist-windows

      - name: Download macOS Intel artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-intel-build
          path: ./dist-macos-intel

      - name: Download macOS Apple Silicon artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-arm-build
          path: ./dist-macos-arm

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist-windows/**/*
            dist-macos-intel/**/*
            dist-macos-arm/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
          token: ${{ secrets.GITHUB_TOKEN }} 