name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build'
        required: true
        default: '1.6.0'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: win
          - os: macos-latest
            platform: mac

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for Windows
        if: matrix.platform == 'win'
        run: npm run make-win
        env:
          # Provide GitHub token for publishing
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Windows Update Metadata
        if: matrix.platform == 'win'
        run: node scripts/generate-update-metadata.js
        
      - name: Build for macOS
        if: matrix.platform == 'mac'
        run: npm run build-mac
        env:
          # Disable code signing for now
          CSC_IDENTITY_AUTO_DISCOVERY: false
          # Provide GitHub token for publishing
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Mac Update Metadata
        if: matrix.platform == 'mac'
        run: |
          VERSION=$(node -e "console.log(require('./package.json').version)")
          cd out
          echo "provider: github" > latest-mac.yml
          echo "owner: PrarthanAgarwal" >> latest-mac.yml
          echo "repo: Flowpad" >> latest-mac.yml
          echo "version: $VERSION" >> latest-mac.yml
          echo "files:" >> latest-mac.yml
          DMG_FILE=$(ls *.dmg)
          echo "  - url: https://github.com/PrarthanAgarwal/Flowpad/releases/download/v$VERSION/$DMG_FILE" >> latest-mac.yml
          echo "    sha512: $(shasum -a 512 $DMG_FILE | awk '{print $1}')" >> latest-mac.yml
          echo "    size: $(stat -f%z $DMG_FILE)" >> latest-mac.yml
          echo "path: $DMG_FILE" >> latest-mac.yml
          echo "sha512: $(shasum -a 512 $DMG_FILE | awk '{print $1}')" >> latest-mac.yml
          echo "releaseDate: $(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> latest-mac.yml
          cat latest-mac.yml

      - name: Upload Windows artifacts
        if: matrix.platform == 'win'
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            out/make/squirrel.windows/**/*.exe
            out/make/squirrel.windows/**/*.yml
            out/make/zip/**/*.zip
            
      - name: Upload macOS artifacts
        if: matrix.platform == 'mac'
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: |
            out/*.dmg
            out/*.yml
            out/mac/**/*
            out/mac-arm64/**/*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: ./dist-windows

      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-build
          path: ./dist-macos

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist-windows/**/*
            dist-macos/**/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 